### Artisan Tracker API Tests
### Base URL: http://localhost:3001/api

### Variables
@baseUrl = http://localhost:83/api
@validToken = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiJjbWc1anpveXAwMDA2a2hwOHh1eno2MDRhIiwiZW1haWwiOiJhZG1pbkBhY21lLmNvbSIsInJvbGUiOiJURU5BTlRfQURNSU4iLCJ0ZW5hbnRJZCI6ImNtZzVqem8wNDAwMDBraHA4MW5xMG54ZHUiLCJpYXQiOjE3NTk1NzUzOTcsImV4cCI6MTc2MDE4MDE5N30.Nun_NKfvXCajbuf0-okWYq8twVjGeUJvWDmUhjEEZ3Q
@contentType = application/json

### ===========================================
### AUTHENTICATION TESTS
### ===========================================

### 1. Register a new tenant and user
POST {{baseUrl}}/auth/register
Content-Type: {{contentType}}

{
  "email": "admin@newcompany.com",
  "password": "password123",
  "firstName": "John",
  "lastName": "Doe",
  "tenantName": "New Company Inc",
  "tenantDomain": "newcompany.com"
}

### 2. Login with existing user
POST {{baseUrl}}/auth/login
Content-Type: {{contentType}}

{
  "email": "admin@acme.com",
  "password": "password123"
}

### 3. Login with super admin
POST {{baseUrl}}/auth/login
Content-Type: {{contentType}}

{
  "email": "admin@mobiletracker.com",
  "password": "password123"
}

### 4. Refresh token (replace with actual refresh token)
POST {{baseUrl}}/auth/refresh
Content-Type: {{contentType}}

{
  "refreshToken": "your-refresh-token-here"
}

### 5. Logout (replace with actual tokens)
POST {{baseUrl}}/auth/logout
Content-Type: {{contentType}}
Authorization: Bearer {{validToken}}

{
  "refreshToken": "your-refresh-token-here"
}

### ===========================================
### DEVICE MANAGEMENT TESTS
### ===========================================

### 6. Register a new device (replace with actual token)
POST {{baseUrl}}/devices/register
Content-Type: {{contentType}}
Authorization: Bearer {{validToken}}

{
  "deviceId": "TEST-DEVICE-001",
  "name": "Test iPhone",
  "model": "iPhone 14 Pro",
  "osVersion": "iOS 16.0",
  "appVersion": "1.0.0"
}

### 7. Get all devices for current user
GET {{baseUrl}}/devices
Authorization: Bearer {{validToken}}

### 8. Get device by ID (replace with actual device ID)
GET {{baseUrl}}/devices/device-id-here
Authorization: Bearer {{validToken}}

### 9. Update device information
PUT {{baseUrl}}/devices/device-id-here
Content-Type: {{contentType}}
Authorization: Bearer {{validToken}}

{
  "name": "Updated Device Name",
  "model": "iPhone 14 Pro Max",
  "osVersion": "iOS 16.1"
}

### 10. Delete device
DELETE {{baseUrl}}/devices/device-id-here
Authorization: Bearer {{validToken}}

### 11. Get device status
GET {{baseUrl}}/devices/device-id-here/status
Authorization: Bearer {{validToken}}

### 12. Update device status (from device)
PUT {{baseUrl}}/devices/device-id-here/status
Content-Type: {{contentType}}
Authorization: Bearer {{validToken}}

{
  "isOnline": true,
  "batteryLevel": 85,
  "location": {
    "latitude": 40.7128,
    "longitude": -74.0060,
    "accuracy": 10,
    "address": "New York, NY, USA"
  }
}

### ===========================================
### DEVICE COMMANDS TESTS
### ===========================================

### 13. Send command to device
POST {{baseUrl}}/devices/device-id-here/commands
Content-Type: {{contentType}}
Authorization: Bearer {{validToken}}

{
  "command": "GET_LOCATION",
  "payload": {
    "accuracy": "high"
  }
}

### 14. Send photo command
POST {{baseUrl}}/devices/device-id-here/commands
Content-Type: {{contentType}}
Authorization: Bearer {{validToken}}

{
  "command": "TAKE_PHOTO",
  "payload": {
    "quality": "high",
    "flash": false
  }
}

### 15. Send audio recording command
POST {{baseUrl}}/devices/device-id-here/commands
Content-Type: {{contentType}}
Authorization: Bearer {{validToken}}

{
  "command": "RECORD_AUDIO",
  "payload": {
    "duration": 60,
    "quality": "high"
  }
}

### 16. Send video recording command
POST {{baseUrl}}/devices/device-id-here/commands
Content-Type: {{contentType}}
Authorization: Bearer {{validToken}}

{
  "command": "RECORD_VIDEO",
  "payload": {
    "duration": 30,
    "quality": "720p"
  }
}

### 17. Send screen recording command
POST {{baseUrl}}/devices/device-id-here/commands
Content-Type: {{contentType}}
Authorization: Bearer {{validToken}}

{
  "command": "SCREEN_RECORDING",
  "payload": {
    "duration": 60,
    "quality": "1080p"
  }
}

### 18. Get call logs
POST {{baseUrl}}/devices/device-id-here/commands
Content-Type: {{contentType}}
Authorization: Bearer {{validToken}}

{
  "command": "GET_CALL_LOGS",
  "payload": {
    "limit": 50,
    "dateFrom": "2024-01-01",
    "dateTo": "2024-12-31"
  }
}

### 19. Get contacts
POST {{baseUrl}}/devices/device-id-here/commands
Content-Type: {{contentType}}
Authorization: Bearer {{validToken}}

{
  "command": "GET_CONTACTS",
  "payload": {
    "limit": 100
  }
}

### 20. Get messages
POST {{baseUrl}}/devices/device-id-here/commands
Content-Type: {{contentType}}
Authorization: Bearer {{validToken}}

{
  "command": "GET_MESSAGES",
  "payload": {
    "limit": 50,
    "platforms": ["SMS", "WHATSAPP", "TELEGRAM"]
  }
}

### 21. Enable app
POST {{baseUrl}}/devices/device-id-here/commands
Content-Type: {{contentType}}
Authorization: Bearer {{validToken}}

{
  "command": "ENABLE_APP",
  "payload": {
    "packageName": "com.whatsapp"
  }
}

### 22. Disable app
POST {{baseUrl}}/devices/device-id-here/commands
Content-Type: {{contentType}}
Authorization: Bearer {{validToken}}

{
  "command": "DISABLE_APP",
  "payload": {
    "packageName": "com.instagram.android"
  }
}

### 23. Get device commands history
GET {{baseUrl}}/devices/device-id-here/commands
Authorization: Bearer {{validToken}}

### 24. Get device commands with pagination
GET {{baseUrl}}/devices/device-id-here/commands?page=1&limit=10&status=EXECUTED
Authorization: Bearer {{validToken}}

### ===========================================
### MEDIA MANAGEMENT TESTS
### ===========================================

### 25. Upload media file (photo)
POST {{baseUrl}}/media/upload
Content-Type: multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW
Authorization: Bearer {{validToken}}

------WebKitFormBoundary7MA4YWxkTrZu0gW
Content-Disposition: form-data; name="file"; filename="test-photo.jpg"
Content-Type: image/jpeg

< ./test-photo.jpg
------WebKitFormBoundary7MA4YWxkTrZu0gW
Content-Disposition: form-data; name="deviceId"

device-id-here
------WebKitFormBoundary7MA4YWxkTrZu0gW
Content-Disposition: form-data; name="fileType"

PHOTO
------WebKitFormBoundary7MA4YWxkTrZu0gW--

### 26. Upload media file (video)
POST {{baseUrl}}/media/upload
Content-Type: multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW
Authorization: Bearer {{validToken}}

------WebKitFormBoundary7MA4YWxkTrZu0gW
Content-Disposition: form-data; name="file"; filename="test-video.mp4"
Content-Type: video/mp4

< ./test-video.mp4
------WebKitFormBoundary7MA4YWxkTrZu0gW
Content-Disposition: form-data; name="deviceId"

device-id-here
------WebKitFormBoundary7MA4YWxkTrZu0gW
Content-Disposition: form-data; name="fileType"

VIDEO
------WebKitFormBoundary7MA4YWxkTrZu0gW--

### 27. Get media files for device
GET {{baseUrl}}/media/device/device-id-here
Authorization: Bearer {{validToken}}

### 28. Get media files with pagination
GET {{baseUrl}}/media/device/device-id-here?page=1&limit=10&fileType=PHOTO
Authorization: Bearer {{validToken}}

### 29. Download media file
GET {{baseUrl}}/media/download/media-file-id-here
Authorization: Bearer {{validToken}}

### 30. Delete media file
DELETE {{baseUrl}}/media/media-file-id-here
Authorization: Bearer {{validToken}}

### ===========================================
### PORTAL DASHBOARD TESTS
### ===========================================

### 31. Get dashboard overview
GET {{baseUrl}}/portal/dashboard
Authorization: Bearer {{validToken}}

### 32. Get tenant statistics
GET {{baseUrl}}/portal/stats
Authorization: Bearer {{validToken}}

### 33. Get device statistics
GET {{baseUrl}}/portal/devices/stats
Authorization: Bearer {{validToken}}

### 34. Get command statistics
GET {{baseUrl}}/portal/commands/stats
Authorization: Bearer {{validToken}}

### 35. Get recent activity
GET {{baseUrl}}/portal/activity
Authorization: Bearer {{validToken}}

### 36. Get system logs
GET {{baseUrl}}/portal/logs
Authorization: Bearer {{validToken}}

### 37. Get system logs with filters
GET {{baseUrl}}/portal/logs?level=ERROR&deviceId=device-id-here&page=1&limit=20
Authorization: Bearer {{validToken}}

### ===========================================
### USER MANAGEMENT TESTS (Admin Only)
### ===========================================

### 38. Get all users in tenant
GET {{baseUrl}}/portal/users
Authorization: Bearer {{validToken}}

### 39. Create new user
POST {{baseUrl}}/portal/users
Content-Type: {{contentType}}
Authorization: Bearer {{validToken}}

{
  "email": "newuser@acme.com",
  "password": "password123",
  "firstName": "New",
  "lastName": "User",
  "role": "USER"
}

### 40. Update user
PUT {{baseUrl}}/portal/users/user-id-here
Content-Type: {{contentType}}
Authorization: Bearer {{validToken}}

{
  "firstName": "Updated",
  "lastName": "Name",
  "role": "TENANT_ADMIN"
}

### 41. Deactivate user
PUT {{baseUrl}}/portal/users/user-id-here/deactivate
Authorization: Bearer {{validToken}}

### 42. Activate user
PUT {{baseUrl}}/portal/users/user-id-here/activate
Authorization: Bearer {{validToken}}

### ===========================================
### TENANT MANAGEMENT TESTS (Super Admin Only)
### ===========================================

### 43. Get all tenants
GET {{baseUrl}}/portal/tenants
Authorization: Bearer {{validToken}}

### 44. Create new tenant
POST {{baseUrl}}/portal/tenants
Content-Type: {{contentType}}
Authorization: Bearer {{validToken}}

{
  "name": "Another Company",
  "domain": "anothercompany.com",
  "isActive": true
}

### 45. Update tenant
PUT {{baseUrl}}/portal/tenants/tenant-id-here
Content-Type: {{contentType}}
Authorization: Bearer {{validToken}}

{
  "name": "Updated Company Name",
  "domain": "updatedcompany.com"
}

### 46. Deactivate tenant
PUT {{baseUrl}}/portal/tenants/tenant-id-here/deactivate
Authorization: Bearer {{validToken}}

### 47. Activate tenant
PUT {{baseUrl}}/portal/tenants/tenant-id-here/activate
Authorization: Bearer {{validToken}}

### ===========================================
### DATA RETRIEVAL TESTS
### ===========================================

### 48. Get call logs for device
GET {{baseUrl}}/data/device-id-here/call-logs
Authorization: Bearer {{validToken}}

### 49. Get contacts for device
GET {{baseUrl}}/data/device-id-here/contacts
Authorization: Bearer {{validToken}}

### 50. Get messages for device
GET {{baseUrl}}/data/device-id-here/messages
Authorization: Bearer {{validToken}}

### 51. Get location history for device
GET {{baseUrl}}/data/device-id-here/locations
Authorization: Bearer {{validToken}}

### 52. Get app activities for device
GET {{baseUrl}}/app-activities/device/DEVICE-001
Authorization: Bearer {{validToken}}

### ===========================================
### FETCH DATA ENDPOINTS TESTS
### ===========================================

### 53. Get call logs for device
GET {{baseUrl}}/call-logs/device/DEVICE-001
Authorization: Bearer {{validToken}}

### 54. Get call logs for device with filters
GET {{baseUrl}}/call-logs/device/DEVICE-001?page=1&limit=10&callType=INCOMING&startDate=2024-01-01T00:00:00Z&endDate=2024-12-31T23:59:59Z
Authorization: Bearer {{validToken}}

### 55. Get contacts for device
GET {{baseUrl}}/contacts/device/DEVICE-001
Authorization: Bearer {{validToken}}

### 56. Get contacts for device with search
GET {{baseUrl}}/contacts/device/DEVICE-001?page=1&limit=20&search=john
Authorization: Bearer {{validToken}}

### 57. Get messages for device
GET {{baseUrl}}/messages/device/DEVICE-001
Authorization: Bearer {{validToken}}

### 58. Get messages for device with filters
GET {{baseUrl}}/messages/device/DEVICE-001?page=1&limit=15&messageType=SMS&startDate=2024-01-01T00:00:00Z&endDate=2024-12-31T23:59:59Z
Authorization: Bearer {{validToken}}

### 59. Get message conversations for device
GET {{baseUrl}}/messages/device/DEVICE-001/conversations
Authorization: Bearer {{validToken}}

### 60. Get message conversations with filters
GET {{baseUrl}}/messages/device/DEVICE-001/conversations?page=1&limit=10&messageType=WHATSAPP
Authorization: Bearer {{validToken}}

### 61. Get location history for device
GET {{baseUrl}}/location/device/DEVICE-001
Authorization: Bearer {{validToken}}

### 62. Get location history with filters
GET {{baseUrl}}/location/device/DEVICE-001?page=1&limit=20&startDate=2024-01-01T00:00:00Z&endDate=2024-12-31T23:59:59Z&minAccuracy=10
Authorization: Bearer {{validToken}}

### 63. Get current location for device
GET {{baseUrl}}/location/device/DEVICE-001/current
Authorization: Bearer {{validToken}}

### 64. Get app activities for device with filters
GET {{baseUrl}}/app-activities/device/DEVICE-001?page=1&limit=15&appName=WhatsApp&startDate=2024-01-01T00:00:00Z&endDate=2024-12-31T23:59:59Z
Authorization: Bearer {{validToken}}

### 65. Get app usage summary for device
GET {{baseUrl}}/app-activities/device/DEVICE-001/summary
Authorization: Bearer {{validToken}}

### 66. Get app usage summary with date range
GET {{baseUrl}}/app-activities/device/DEVICE-001/summary?startDate=2024-01-01T00:00:00Z&endDate=2024-12-31T23:59:59Z
Authorization: Bearer {{validToken}}

### ===========================================
### INDIVIDUAL RECORD FETCH TESTS
### ===========================================

### 67. Get specific call log by ID
GET {{baseUrl}}/call-logs/call-log-id-here
Authorization: Bearer {{validToken}}

### 68. Get specific contact by ID
GET {{baseUrl}}/contacts/contact-id-here
Authorization: Bearer {{validToken}}

### 69. Get specific message by ID
GET {{baseUrl}}/messages/message-id-here
Authorization: Bearer {{validToken}}

### 70. Get specific location by ID
GET {{baseUrl}}/location/location-id-here
Authorization: Bearer {{validToken}}

### 71. Get specific app activity by ID
GET {{baseUrl}}/app-activities/app-activity-id-here
Authorization: Bearer {{validToken}}

### ===========================================
### ERROR HANDLING TESTS
### ===========================================

### 72. Test invalid login
POST {{baseUrl}}/auth/login
Content-Type: {{contentType}}

{
  "email": "invalid@email.com",
  "password": "wrongpassword"
}

### 73. Test unauthorized access
GET {{baseUrl}}/devices
Authorization: Bearer {{validToken}}

### 74. Test invalid device ID
GET {{baseUrl}}/devices/invalid-device-id
Authorization: Bearer {{validToken}}

### 75. Test invalid command
POST {{baseUrl}}/devices/device-id-here/commands
Content-Type: {{contentType}}
Authorization: Bearer {{validToken}}

{
  "command": "INVALID_COMMAND",
  "payload": {}
}

### ===========================================
### RATE LIMITING TESTS
### ===========================================

### 76. Test rate limiting (make multiple requests quickly)
GET {{baseUrl}}/devices
Authorization: Bearer {{validToken}}

### 77. Test rate limiting (make multiple requests quickly)
GET {{baseUrl}}/devices
Authorization: Bearer {{validToken}}

### 78. Test rate limiting (make multiple requests quickly)
GET {{baseUrl}}/devices
Authorization: Bearer {{validToken}}

### ===========================================
### HEALTH CHECK TESTS
### ===========================================

### 79. Health check
GET {{baseUrl}}/health

### 80. Database health check
GET {{baseUrl}}/health/database

### 81. Redis health check
GET {{baseUrl}}/health/redis

### 82. Firebase health check
GET {{baseUrl}}/health/firebase

### ===========================================
### NOTES
### ===========================================

### Instructions:
### 1. Replace "{{validToken}}" with actual JWT token from login response
### 2. Replace "device-id-here" with actual device ID from device registration
### 3. Replace "user-id-here" with actual user ID
### 4. Replace "tenant-id-here" with actual tenant ID
### 5. Replace "media-file-id-here" with actual media file ID
### 6. For file uploads, replace file paths with actual file paths
### 7. Test endpoints in order for best results
### 8. Some endpoints require specific roles (SUPER_ADMIN, TENANT_ADMIN, USER)
### 9. Check response status codes and error messages
### 10. Use the seeded data for initial testing:
###    - Super Admin: admin@mobiletracker.com / password123
###    - Tenant Admin: admin@acme.com / password123
###    - Regular User: user1@acme.com / password123

### ===========================================
### DEVICE CALL HOME TESTS
### ===========================================

### 72. Device call home - basic mandatory fields
POST {{baseUrl}}/devices/call-home
Content-Type: {{contentType}}
Authorization: Bearer {{validToken}}

{
  "deviceId": "TEST-DEVICE-001",
  "batteryLevel": 85,
  "location": {
    "latitude": 40.7128,
    "longitude": -74.0060,
    "accuracy": 10,
    "address": "New York, NY, USA"
  }
}

### 73. Device call home - with all optional fields
POST {{baseUrl}}/devices/call-home
Content-Type: {{contentType}}
Authorization: Bearer {{validToken}}

{
  "deviceId": "TEST-DEVICE-001",
  "batteryLevel": 50,
  "location": {
    "latitude": 40.7128,
    "longitude": -74.006,
    "accuracy": 10,
    "address": "New York, NY, USA"
  },
  "networkOperator": "MTN",
  "simOperator": "MTN UG",
  "simCountryISO": "UG",
  "totalMemoryGB": 8.0,
  "freeMemoryGB": 3.2,
  "totalStorageGB": 256.0,
  "freeStorageGB": 128.5,
  "usedMemoryPercentage": 60,
  "orientation": "portrait",
  "isRooted": false,
  "brand": "Samsung",
  "manufacturer": "Samsung Electronics",
  "deviceName": "o1q",
  "product": "o1quew",
  "board": "exynos2100",
  "hardware": "exynos2100",
  "sdkVersion": 34,
  "androidVersion": "14",
  "release": "14",
  "codename": "UpsideDownCake",
  "incremental": "123456789",
  "securityPatch": "2025-09-01",
  "isEmulator": false,
  "screenDensity": 3.0,
  "screenResolution": "1080x2400",
  "appVersionCode": 105,
  "appInstallTime": 1696320000000,
  "collectedAt": 1696351200000
}

### 74. Device call home - minimal location
POST {{baseUrl}}/devices/call-home
Content-Type: {{contentType}}
Authorization: Bearer {{validToken}}

{
  "deviceId": "TEST-DEVICE-001",
  "batteryLevel": 25,
  "location": {
    "latitude": 40.7589,
    "longitude": -73.9851
  }
}

### 75. Device call home - invalid device ID
POST {{baseUrl}}/devices/call-home
Content-Type: {{contentType}}
Authorization: Bearer {{validToken}}

{
  "deviceId": "INVALID-DEVICE",
  "batteryLevel": 75,
  "location": {
    "latitude": 40.7128,
    "longitude": -74.0060
  }
}

### 76. Device call home - invalid battery level
POST {{baseUrl}}/devices/call-home
Content-Type: {{contentType}}
Authorization: Bearer {{validToken}}

{
  "deviceId": "TEST-DEVICE-001",
  "batteryLevel": 150,
  "location": {
    "latitude": 40.7128,
    "longitude": -74.0060
  }
}

### 77. Device call home - invalid location coordinates
POST {{baseUrl}}/devices/call-home
Content-Type: {{contentType}}
Authorization: Bearer {{validToken}}

{
  "deviceId": "TEST-DEVICE-001",
  "batteryLevel": 60,
  "location": {
    "latitude": 200.0,
    "longitude": -74.0060
  }
}
